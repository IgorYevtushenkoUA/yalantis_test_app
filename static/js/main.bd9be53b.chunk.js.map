{"version":3,"sources":["app/pages/main/components/employee/alphabet/list/empty/EmptyEmployeesList.js","app/pages/main/components/employee/alphabet/list/item/EmployeeItem.js","app/pages/main/components/employee/alphabet/list/EmployeesList.js","app/pages/main/components/employee/alphabet/Alphabet.js","app/pages/main/components/employee/EmployeeSide.js","app/pages/main/components/birth/content/filled/employeeMonth/item/EmployeeItem.js","app/pages/main/components/birth/content/filled/employeeMonth/EmployeeMonth.js","app/pages/main/components/birth/content/empty/BirthEmpty.js","app/pages/main/components/birth/content/filled/BirthFilled.js","app/pages/main/components/birth/content/BirthContent.js","app/pages/main/components/birth/BirthSide.js","app/pages/main/Main.js","app/pages/loading/Loading.js","app/utils/API.js","App.js","reportWebVitals.js","index.js"],"names":["EmptyEmployeesList","EmployeeItem","props","style","active","fontSize","fontWeight","color","employee","lastName","firstName","type","value","name","onChange","removeEmployee","checked","addEmployee","EmployeesList","employees","map","employeesId","includes","id","Alphabet","letter","toUpperCase","EmployeeSide","display","justifyContent","gridTemplateColumns","borderRight","paddingLeft","alphabet","key","get","employeeItem","Date","dob","getUTCDate","monthName","getFullYear","EmployeeMonth","paddingTop","marginLeft","BirthEmpty","BirthFilled","employeesBirth","keys","monthId","months","BirthContent","size","BirthSide","borderTop","Main","useState","Map","JSON","parse","localStorage","getItem","setEmployeesBirth","compare","a","b","getMonthId","month","monthCoeff","setLocalStorage","employeeMap","setItem","stringify","Array","from","entries","sortedEmployees","i","length","toLowerCase","has","set","updatedValue","push","sort","groupEmployeesBySurname","getMonth","filter","employeesList","employeeList","e","delete","val","values","arr","next","concat","getEmployeesId","Loading","axios","create","baseURL","responseType","App","setEmployees","loading","setLoading","useEffect","API","then","data","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wLAUeA,EARY,WACzB,OACE,8BACE,8CCmDSC,EAtDM,SAACC,GAqBpB,OACE,gCACE,sBAAKC,MAAOD,EAAME,OARF,CAClBC,SAAU,MACVC,WAAY,OACZC,MAAO,QATc,CACrBF,SAAU,MACVC,WAAY,OACZC,MAAO,SAWL,UACGL,EAAMM,SAASC,SADlB,IAC6BP,EAAMM,SAASE,aAE5C,8BACE,iCACE,gCACE,uBACEC,KAAK,QACLC,MAAM,aACNC,KAAK,SACLC,SA5BW,WACrBZ,EAAMa,eAAeb,EAAMM,WA4BjBQ,SAAUd,EAAME,SACf,IACH,kDAEF,gCACE,uBACEO,KAAK,QACLC,MAAM,SACNC,KAAK,SACLC,SA1CQ,WAClBZ,EAAMe,YAAYf,EAAMM,WA0CdQ,QAASd,EAAME,SACd,IACH,uDCxBGc,EApBO,SAAChB,GACrB,OAAKA,EAAMiB,WAGDjB,EAAMiB,UAGZjB,EAAMiB,UAAUC,KAAI,SAACZ,GAAD,OAClB,cAAC,EAAD,CAEEA,SAAUA,EACVS,YAAaf,EAAMe,YACnBF,eAAgBb,EAAMa,eACtBX,OAAQF,EAAMmB,YAAYC,SAASd,EAASe,KAJvCf,EAASe,OAPb,cAAC,EAAD,KCWIC,EAdE,SAACtB,GAChB,OACE,gCACE,6BAAKA,EAAMuB,OAAOC,gBAClB,cAAC,EAAD,CACEP,UAAWjB,EAAMiB,UACjBF,YAAaf,EAAMe,YACnBF,eAAgBb,EAAMa,eACtBM,YAAanB,EAAMmB,kBCqBZM,EA7BM,SAACzB,GACpB,OACE,gCACE,qBAAKC,MAAO,CAAEyB,QAAS,OAAQC,eAAgB,UAA/C,SACE,6CAEF,qBACE1B,MAAO,CACLyB,QAAS,OACTE,oBAAqB,cACrBC,YAAa,kBACbC,YAAa,MALjB,SAQG9B,EAAM+B,SAASb,KAAI,SAACK,EAAQS,GAAT,OAClB,cAAC,EAAD,CAEET,OAAQA,EACRN,UAAWjB,EAAMiB,UAAUgB,IAAIV,GAC/BR,YAAaf,EAAMe,YACnBF,eAAgBb,EAAMa,eACtBM,YAAanB,EAAMmB,aALda,YCPFjC,EAVM,SAACC,GACpB,OACE,gCACGA,EAAMkC,aAAa3B,SADtB,IACiCP,EAAMkC,aAAa1B,UADpD,KACiE,IAC9D,IAAI2B,KAAKnC,EAAMkC,aAAaE,KAAKC,aAFpC,IAEmDrC,EAAMsC,UAAW,IACjE,IAAIH,KAAKnC,EAAMkC,aAAaE,KAAKG,kBCezBC,EAnBO,SAACxC,GACrB,OACE,sBAAKC,MAAO,CAAEwC,WAAY,QAA1B,UACGzC,EAAMsC,UACP,6BACGtC,EAAMiB,UAAUC,KAAI,SAACgB,GAAD,OACnB,oBAAIjC,MAAO,CAAEyC,WAAY,SAAzB,SACE,cAAC,EAAD,CAEER,aAAcA,EACdI,UAAWtC,EAAMsC,WAFZJ,EAAab,eCDjBsB,EARI,WACjB,OACE,8BACE,4DCaSC,EAfK,SAAC5C,GACnB,OACE,8BACG,YAAIA,EAAM6C,eAAeC,QAAQ5B,KAAI,SAAC6B,EAASf,GAAV,OACpC,cAAC,EAAD,CAEEe,QAASA,EACTT,UAAWtC,EAAMgD,OAAOf,IAAIc,GAC5B9B,UAAWjB,EAAM6C,eAAeZ,IAAIc,IAH/Bf,SCWAiB,EAfM,SAACjD,GACpB,OACE,8BACgC,GAA7BA,EAAM6C,eAAeK,KACpB,cAAC,EAAD,IAEA,cAAC,EAAD,CACEL,eAAgB7C,EAAM6C,eACtBG,OAAQhD,EAAMgD,YCSTG,EAjBG,SAACnD,GACjB,OACE,gCACE,qBAAKC,MAAO,CAAEyB,QAAS,OAAQC,eAAgB,UAA/C,SACE,sDAGF,qBAAK1B,MAAO,CAAEyC,WAAY,MAAOU,UAAW,mBAA5C,SACE,cAAC,EAAD,CACEJ,OAAQhD,EAAMgD,OACdH,eAAgB7C,EAAM6C,uBC2IjBQ,EApJF,SAACrD,GAAW,IAAD,EACsBsD,mBAC1C,IAAIC,IAAIC,KAAKC,MAAMC,aAAaC,QAAQ,oBAFpB,mBACfd,EADe,KACCe,EADD,KAKlB3C,EAAYjB,EAAMiB,UA+BlB+B,EAAS,IAAIO,IAAI,CACnB,CAAC,EAAG,OACJ,CAAC,EAAG,QACJ,CAAC,EAAG,QACJ,CAAC,EAAG,UACJ,CAAC,EAAG,aACJ,CAAC,EAAG,WACJ,CAAC,EAAG,YACJ,CAAC,EAAG,YACJ,CAAC,EAAG,WACJ,CAAC,EAAG,YACJ,CAAC,GAAI,SACL,CAAC,GAAI,WAKDM,EAAU,SAACC,EAAGC,GAClB,OAAID,EAAEvD,SAAWwD,EAAExD,UAAkB,EACjCuD,EAAEvD,SAAWwD,EAAExD,SAAiB,EAC7B,GAGHyD,EAAa,SAACC,GAElB,OADSA,GAAS,EAAIC,EAAiBD,EAAQA,EAT9B,GAwBbE,EAAkB,SAACC,GACvBV,aAAaW,QACX,gBACAb,KAAKc,UAAUC,MAAMC,KAAKJ,EAAYK,cAmD1C,OACE,sBAAKxE,MAAO,CAAEyB,QAAS,OAAQE,oBAAqB,WAApD,UACE,8BACE,cAAC,EAAD,CACEX,UAlDwB,SAACA,GAE/B,IADA,IAAIyD,EAAkB,IAAInB,IACjBoB,EAAI,EAAGA,EAAI1D,EAAU2D,OAAQD,IAAK,CACzC,IAAIpD,EAASN,EAAU0D,GAAGpE,SAAS,GAAGsE,cACjCH,EAAgBI,IAAIvD,IACvBmD,EAAgBK,IAAIxD,EAAQ,IAE9B,IAAIyD,EAAeN,EAAgBzC,IAAIV,GACvCyD,EAAaC,KAAKhE,EAAU0D,IAC5BK,EAAaE,KAAKrB,GAClBa,EAAgBK,IAAIxD,EAAQyD,GAE9B,OAAO,IAAIzB,IAAI,YAAImB,EAAgBD,WAAWS,QAsC7BC,CAAwBlE,GACnCc,SA/HO,CACb,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAsGMhB,YArCY,SAACT,GACnB,IAAI8D,EAAc,IAAIb,IAAIV,GACtBE,EAAUiB,EAAW,IAAI7B,KAAK7B,EAAS8B,KAAKgD,YAChD,GAAKhB,EAAYnC,IAAIc,IAEd,GACiE,GAAtEqB,EAAYnC,IAAIc,GAASsC,QAAO,SAACV,GAAD,OAAOA,EAAEtD,IAAMf,EAASe,MAAIuD,OAC5D,CACA,IAAIU,EAAgBlB,EAAYnC,IAAIc,GACpCuC,EAAcL,KAAK3E,GACnBgF,EAAcJ,KAAKrB,GACnBO,EAAYW,IAAIhC,EAASuC,SAPzBlB,EAAYW,IAAIhC,EAAS,CAACzC,IAS5B8D,EAAc,IAAIb,IAAI,YAAIa,EAAYK,WAAWS,QACjDf,EAAgBC,GAChBR,EAAkBQ,IAuBZvD,eApBe,SAACP,GACtB,IAAI8D,EAAc,IAAIb,IAAIV,GACtBE,EAAUiB,EAAW,IAAI7B,KAAK7B,EAAS8B,KAAKgD,YAC5CG,EAAenB,EAAYnC,IAAIc,GAC7BwC,IAEuB,IAD3BA,EAAeA,EAAaF,QAAO,SAACG,GAAD,OAAOA,EAAEnE,IAAMf,EAASe,OAC1CuD,OAAaR,EAAYqB,OAAO1C,GAC5CqB,EAAYW,IAAIhC,EAASwC,IAEhCpB,EAAgBC,GAChBR,EAAkBQ,IAWZjD,YAxEe,WAGrB,IAFA,IAAIuE,EAAM7C,EAAe8C,SACrBxE,EAAc,GACTwD,EAAI,EAAGA,EAAI9B,EAAeK,KAAMyB,IAAK,CAC5C,IAAIiB,EAAMF,EAAIG,OAAOnF,MAAMQ,KAAI,SAAC4C,GAAD,OAAOA,EAAEzC,MACxCF,EAAcA,EAAY2E,OAAOF,GAEnC,OAAOzE,EAiEY4E,OAIjB,8BACE,cAAC,EAAD,CAAWlD,eAAgBA,EAAgBG,OAAQA,UC7I5CgD,EAJC,WACd,OAAO,2C,QCDMC,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,iEACTC,aAAc,SCeDC,MAdf,WAAgB,IAAD,EACqB/C,mBAAS,IAD9B,mBACNrC,EADM,KACKqF,EADL,OAEiBhD,oBAAS,GAF1B,mBAENiD,EAFM,KAEGC,EAFH,KAWb,OAPAC,qBAAU,WACRC,EAAIzE,IAAI,KAAK0E,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACnBN,EAAaM,GACbJ,GAAW,QAEZ,IAEID,EAAU,cAAC,EAAD,IAAc,cAAC,EAAD,CAAMtF,UAAWA,KCJnC4F,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBJ,MAAK,YAAkD,IAA/CK,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BZ,M","file":"static/js/main.bd9be53b.chunk.js","sourcesContent":["import React from \"react\";\n\nconst EmptyEmployeesList = () => {\n  return (\n    <div>\n      <strong>.....</strong>\n    </div>\n  );\n};\n\nexport default EmptyEmployeesList;\n","import React from \"react\";\n\nconst EmployeeItem = (props) => {\n  const addEmployee = () => {\n    props.addEmployee(props.employee);\n  };\n\n  const removeEmployee = () => {\n    props.removeEmployee(props.employee);\n  };\n\n  const notActiveStyle = {\n    fontSize: \"1em\",\n    fontWeight: \"bold\",\n    color: \"black\",\n  };\n\n  const activeStyle = {\n    fontSize: \"1em\",\n    fontWeight: \"bold\",\n    color: \"blue\",\n  };\n\n  return (\n    <div>\n      <div style={props.active ? activeStyle : notActiveStyle}>\n        {props.employee.lastName} {props.employee.firstName}\n      </div>\n      <div>\n        <form>\n          <div>\n            <input\n              type=\"radio\"\n              value=\"not active\"\n              name=\"gender\"\n              onChange={removeEmployee}\n              checked={!props.active}\n            />{\" \"}\n            <label>not active</label>\n          </div>\n          <div>\n            <input\n              type=\"radio\"\n              value=\"active\"\n              name=\"gender\"\n              onChange={addEmployee}\n              checked={props.active}\n            />{\" \"}\n            <label>active</label>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default EmployeeItem;\n","import React from \"react\";\nimport EmptyEmployeesList from \"./empty/EmptyEmployeesList\";\nimport EmployeeItem from \"./item/EmployeeItem\";\n\nconst EmployeesList = (props) => {\n  if (!props.employees) {\n    return <EmptyEmployeesList />;\n  } else {\n    return !props.employees ? (\n      <EmptyEmployeesList />\n    ) : (\n      props.employees.map((employee) => (\n        <EmployeeItem\n          key={employee.id}\n          employee={employee}\n          addEmployee={props.addEmployee}\n          removeEmployee={props.removeEmployee}\n          active={props.employeesId.includes(employee.id)}\n        />\n      ))\n    );\n  }\n};\n\nexport default EmployeesList;\n","import React from \"react\";\nimport EmployeesList from \"./list/EmployeesList\";\n\nconst Alphabet = (props) => {\n  return (\n    <div>\n      <h4>{props.letter.toUpperCase()}</h4>\n      <EmployeesList\n        employees={props.employees}\n        addEmployee={props.addEmployee}\n        removeEmployee={props.removeEmployee}\n        employeesId={props.employeesId}\n      />\n    </div>\n  );\n};\n\nexport default Alphabet;\n","import React from \"react\";\nimport Alphabet from \"./alphabet/Alphabet\";\n\nconst EmployeeSide = (props) => {\n  return (\n    <div>\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <h3>Employees</h3>\n      </div>\n      <div\n        style={{\n          display: \"grid\",\n          gridTemplateColumns: \"4fr 4fr 4fr\",\n          borderRight: \"1px solid black\",\n          paddingLeft: \"5%\",\n        }}\n      >\n        {props.alphabet.map((letter, key) => (\n          <Alphabet\n            key={key}\n            letter={letter}\n            employees={props.employees.get(letter)}\n            addEmployee={props.addEmployee}\n            removeEmployee={props.removeEmployee}\n            employeesId={props.employeesId}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default EmployeeSide;\n","import React from \"react\";\n\nconst EmployeeItem = (props) => {\n  return (\n    <div>\n      {props.employeeItem.lastName} {props.employeeItem.firstName} -{\" \"}\n      {new Date(props.employeeItem.dob).getUTCDate()} {props.monthName}{\" \"}\n      {new Date(props.employeeItem.dob).getFullYear()}\n    </div>\n  );\n};\n\nexport default EmployeeItem;\n","import React from \"react\";\nimport EmployeeItem from \"./item/EmployeeItem\";\n\nconst EmployeeMonth = (props) => {\n  return (\n    <div style={{ paddingTop: \"10px\" }}>\n      {props.monthName}\n      <ul>\n        {props.employees.map((employeeItem) => (\n          <li style={{ marginLeft: \"-20px\" }}>\n            <EmployeeItem\n              key={employeeItem.id}\n              employeeItem={employeeItem}\n              monthName={props.monthName}\n            />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default EmployeeMonth;\n","import React from \"react\";\n\nconst BirthEmpty = () => {\n  return (\n    <div>\n      <h4>Employees List is empty</h4>\n    </div>\n  );\n};\n\nexport default BirthEmpty;\n","import React from \"react\";\nimport EmployeeMonth from \"./employeeMonth/EmployeeMonth\";\n\nconst BirthFilled = (props) => {\n  return (\n    <div>\n      {[...props.employeesBirth.keys()].map((monthId, key) => (\n        <EmployeeMonth\n          key={key}\n          monthId={monthId}\n          monthName={props.months.get(monthId)}\n          employees={props.employeesBirth.get(monthId)}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default BirthFilled;\n","import React from \"react\";\nimport BirthEmpty from \"./empty/BirthEmpty\";\nimport BirthFilled from \"./filled/BirthFilled\";\n\nconst BirthContent = (props) => {\n  return (\n    <div>\n      {props.employeesBirth.size == 0 ? (\n        <BirthEmpty />\n      ) : (\n        <BirthFilled\n          employeesBirth={props.employeesBirth}\n          months={props.months}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default BirthContent;\n","import React from \"react\";\nimport EmployeeMonth from \"./content/filled/employeeMonth/EmployeeMonth\";\nimport BirthContent from \"./content/BirthContent\";\n\nconst BirthSide = (props) => {\n  return (\n    <div>\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <h3>Employees birthday</h3>\n      </div>\n\n      <div style={{ marginLeft: \"10%\", borderTop: \"1px solid black\" }}>\n        <BirthContent\n          months={props.months}\n          employeesBirth={props.employeesBirth}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default BirthSide;\n","import React from \"react\";\nimport EmployeeSide from \"./components/employee/EmployeeSide\";\nimport BirthSide from \"./components/birth/BirthSide\";\nimport { useState } from \"react\";\n\nconst Main = (props) => {\n  const [employeesBirth, setEmployeesBirth] = useState(\n    new Map(JSON.parse(localStorage.getItem(\"employeesData\")))\n  );\n\n  let employees = props.employees;\n\n  let alphabet = [\n    \"a\",\n    \"b\",\n    \"c\",\n    \"d\",\n    \"e\",\n    \"f\",\n    \"g\",\n    \"h\",\n    \"i\",\n    \"j\",\n    \"k\",\n    \"l\",\n    \"m\",\n    \"n\",\n    \"o\",\n    \"p\",\n    \"q\",\n    \"r\",\n    \"s\",\n    \"t\",\n    \"u\",\n    \"v\",\n    \"w\",\n    \"x\",\n    \"y\",\n    \"z\",\n  ];\n\n  let months = new Map([\n    [0, \"May\"],\n    [1, \"June\"],\n    [2, \"July\"],\n    [3, \"August\"],\n    [4, \"September\"],\n    [5, \"October\"],\n    [6, \"November\"],\n    [7, \"December\"],\n    [8, \"January\"],\n    [9, \"February\"],\n    [10, \"March\"],\n    [11, \"April\"],\n  ]);\n\n  const monthCoeff = 4;\n\n  const compare = (a, b) => {\n    if (a.lastName < b.lastName) return -1;\n    if (a.lastName > b.lastName) return 1;\n    return 0;\n  };\n\n  const getMonthId = (month) => {\n    let id = month <= 3 ? monthCoeff * 2 + month : month - monthCoeff;\n    return id;\n  };\n\n  // todo improve\n  const getEmployeesId = () => {\n    let val = employeesBirth.values();\n    let employeesId = [];\n    for (let i = 0; i < employeesBirth.size; i++) {\n      let arr = val.next().value.map((a) => a.id);\n      employeesId = employeesId.concat(arr);\n    }\n    return employeesId;\n  };\n\n  const setLocalStorage = (employeeMap) => {\n    localStorage.setItem(\n      \"employeesData\",\n      JSON.stringify(Array.from(employeeMap.entries()))\n    );\n  };\n\n  // todo do better\n  const groupEmployeesBySurname = (employees) => {\n    let sortedEmployees = new Map();\n    for (let i = 0; i < employees.length; i++) {\n      let letter = employees[i].lastName[0].toLowerCase();\n      if (!sortedEmployees.has(letter)) {\n        sortedEmployees.set(letter, []);\n      }\n      let updatedValue = sortedEmployees.get(letter);\n      updatedValue.push(employees[i]);\n      updatedValue.sort(compare);\n      sortedEmployees.set(letter, updatedValue);\n    }\n    return new Map([...sortedEmployees.entries()].sort());\n  };\n\n  const addEmployee = (employee) => {\n    let employeeMap = new Map(employeesBirth);\n    let monthId = getMonthId(new Date(employee.dob).getMonth());\n    if (!employeeMap.get(monthId)) {\n      employeeMap.set(monthId, [employee]);\n    } else if (\n      employeeMap.get(monthId).filter((i) => i.id == employee.id).length == 0\n    ) {\n      let employeesList = employeeMap.get(monthId);\n      employeesList.push(employee);\n      employeesList.sort(compare);\n      employeeMap.set(monthId, employeesList);\n    }\n    employeeMap = new Map([...employeeMap.entries()].sort());\n    setLocalStorage(employeeMap);\n    setEmployeesBirth(employeeMap);\n  };\n\n  const removeEmployee = (employee) => {\n    let employeeMap = new Map(employeesBirth);\n    let monthId = getMonthId(new Date(employee.dob).getMonth());\n    let employeeList = employeeMap.get(monthId);\n    if (!!employeeList) {\n      employeeList = employeeList.filter((e) => e.id != employee.id);\n      if (employeeList.length == 0) employeeMap.delete(monthId);\n      else employeeMap.set(monthId, employeeList);\n    }\n    setLocalStorage(employeeMap);\n    setEmployeesBirth(employeeMap);\n  };\n\n  return (\n    <div style={{ display: \"grid\", gridTemplateColumns: \"7fr 5fr\" }}>\n      <div>\n        <EmployeeSide\n          employees={groupEmployeesBySurname(employees)}\n          alphabet={alphabet}\n          addEmployee={addEmployee}\n          removeEmployee={removeEmployee}\n          employeesId={getEmployeesId()}\n        />\n      </div>\n\n      <div>\n        <BirthSide employeesBirth={employeesBirth} months={months} />\n      </div>\n    </div>\n  );\n};\n\nexport default Main;\n","import React from \"react\";\n\nconst Loading = () => {\n  return <div>Loading</div>;\n};\n\nexport default Loading;\n","import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"https://yalantis-react-school-api.yalantis.com/api/task0/users\",\n  responseType: \"json\",\n});\n","import Main from \"./app/pages/main/Main\";\nimport { useState, useEffect } from \"react\";\nimport Loading from \"./app/pages/loading/Loading\";\nimport API from \"./app/utils/API\";\n\nfunction App() {\n  const [employees, setEmployees] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    API.get(\"/\").then(({ data }) => {\n      setEmployees(data);\n      setLoading(false);\n    });\n  }, []);\n\n  return loading ? <Loading /> : <Main employees={employees} />;\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}